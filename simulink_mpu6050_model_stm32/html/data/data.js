var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"simulink_mpu6050_model","ref":false,"files":[{"name":"simulink_mpu6050_model.c","type":"source","group":"model","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: simulink_mpu6050_model.c\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#include \"simulink_mpu6050_model.h\"\r\n#include \"simulink_mpu6050_model_private.h\"\r\n\r\n/* Block states (default storage) */\r\nDW_simulink_mpu6050_model simulink_mpu6050_model_DW;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL_simulink_mpu6050_model simulink_mpu6050_model_M_;\r\nRT_MODEL_simulink_mpu6050_model *const simulink_mpu6050_model_M =\r\n  &simulink_mpu6050_model_M_;\r\n\r\n/* Model step function */\r\nvoid simulink_mpu6050_model_step(void)\r\n{\r\n  {\r\n  }\r\n}\r\n\r\n/* Model initialize function */\r\nvoid simulink_mpu6050_model_initialize(void)\r\n{\r\n  {\r\n    /* user code (Start function Header) */\r\n    {\r\n      /* TIM3 initialization. */\r\n      /* Store TIM3 informations and its handler. */\r\n      G_TIM_Conf[G_TIM_Count] = &TIM3_Conf;\r\n      G_TIM_Handler[G_TIM_Count] = &htim3;\r\n\r\n      /* Store TIM information. */\r\n      TIM3_Conf.TIM_Prescaler = 7199;\r\n      TIM3_Conf.TIM_APBClock = 72000000;\r\n      TIM3_Conf.TIM_ARR = 49 - 1;\r\n      TIM3_Conf.TIM_Clock = 10000.0;\r\n      TIM3_Conf.TIM_Freq = 204.08;\r\n      TIM3_Conf.CH1_duty = 0.0;\r\n      TIM3_Conf.CH2_duty = 0.0;\r\n      TIM3_Conf.CH3_duty = 0.0;\r\n      TIM3_Conf.CH4_duty = 0.0;\r\n      TIM3_Conf.CH1_type = UNKNOWN;\r\n      TIM3_Conf.CH2_type = UNKNOWN;\r\n      TIM3_Conf.CH3_type = UNKNOWN;\r\n      TIM3_Conf.CH4_type = UNKNOWN;\r\n\r\n      /* Interrupt handler default initialization. */\r\n      TIM3_Conf.ItUpFcn = NULL;\r\n      TIM3_Conf.ItTrgFcn = NULL;\r\n      TIM3_Conf.ItComFcn = NULL;\r\n      TIM3_Conf.ItBrkFcn = NULL;\r\n      TIM3_Conf.ItCcFcn = NULL;\r\n\r\n      /* Update interrupt function. */\r\n      TIM3_Conf.ItUpFcn = TIM3_ItUpFcn;\r\n\r\n      /* Auto-reload preload enable */\r\n      /*****Bugzilla 63376 *****/\r\n      /*SET_BIT((&htim3)->Instance->CR1,TIM_CR1_ARPE);*/\r\n\r\n      /* Update register value with blockset value. */\r\n      /* Prescaler. */\r\n      __HAL_TIM_SET_PRESCALER(&htim3,TIM3_Conf.TIM_Prescaler);\r\n\r\n      /* Autoreload: ARR. */\r\n      __HAL_TIM_SET_AUTORELOAD(&htim3,49 - 1);\r\n\r\n      /* Update registers before start operation to come. */\r\n      HAL_TIM_GenerateEvent(&htim3,TIM_EVENTSOURCE_UPDATE);\r\n    }\r\n\r\n    /* user code (Start function Body) */\r\n    {\r\n      /* TIM3 Start. */\r\n      /* Starts the TIM Base generation in interrupt mode. */\r\n      HAL_TIM_Base_Start_IT(&htim3);\r\n\r\n      /* Start interrupt for Update event*/\r\n      HAL_TIM_Base_Start_IT(&htim3);\r\n    }\r\n  }\r\n}\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model.c\r\n */\r\n"},{"name":"simulink_mpu6050_model.h","type":"header","group":"model","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: simulink_mpu6050_model.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_simulink_mpu6050_model_h_\r\n#define RTW_HEADER_simulink_mpu6050_model_h_\r\n#include \"STM32_Config.h\"\r\n#include \"simulink_mpu6050_model_External_Functions.h\"\r\n#include \"simulink_mpu6050_model_TIM.h\"\r\n#ifndef simulink_mpu6050_model_COMMON_INCLUDES_\r\n#define simulink_mpu6050_model_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                             /* simulink_mpu6050_model_COMMON_INCLUDES_ */\r\n\r\n#include \"simulink_mpu6050_model_types.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n/* Block states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T acc_pitch;                    /* '<Root>/Data Store Memory' */\r\n  real_T pitch;                        /* '<Root>/Data Store Memory1' */\r\n  real_T Gyro_Y;                       /* '<Root>/Data Store Memory10' */\r\n  real_T Accel_Z;                      /* '<Root>/Data Store Memory11' */\r\n  real_T Gyro_Z;                       /* '<Root>/Data Store Memory12' */\r\n  real_T acc_roll;                     /* '<Root>/Data Store Memory2' */\r\n  real_T roll;                         /* '<Root>/Data Store Memory3' */\r\n  real_T acc_yaw;                      /* '<Root>/Data Store Memory4' */\r\n  real_T yaw;                          /* '<Root>/Data Store Memory5' */\r\n  real_T Temputure;                    /* '<Root>/Data Store Memory6' */\r\n  real_T Accel_X;                      /* '<Root>/Data Store Memory7' */\r\n  real_T Gyro_X;                       /* '<Root>/Data Store Memory8' */\r\n  real_T Accel_Y;                      /* '<Root>/Data Store Memory9' */\r\n  real_T LED_flash;                    /* '<Root>/Data Store Memory14' */\r\n} DW_simulink_mpu6050_model;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_simulink_mpu6050_model {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block states (default storage) */\r\nextern DW_simulink_mpu6050_model simulink_mpu6050_model_DW;\r\n\r\n/* Model entry point functions */\r\nextern void simulink_mpu6050_model_initialize(void);\r\nextern void simulink_mpu6050_model_step(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL_simulink_mpu6050_model *const simulink_mpu6050_model_M;\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<S2>/Scope' : Unused code path elimination\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'simulink_mpu6050_model'\r\n * '<S1>'   : 'simulink_mpu6050_model/Function-Call Subsystem'\r\n * '<S2>'   : 'simulink_mpu6050_model/Function-Call Subsystem/Subsystem'\r\n * '<S3>'   : 'simulink_mpu6050_model/Function-Call Subsystem/Subsystem/If Action Subsystem'\r\n */\r\n#endif                                /* RTW_HEADER_simulink_mpu6050_model_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model.h\r\n */\r\n"},{"name":"simulink_mpu6050_model_private.h","type":"header","group":"model","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: simulink_mpu6050_model_private.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_simulink_mpu6050_model_private_h_\r\n#define RTW_HEADER_simulink_mpu6050_model_private_h_\r\n#include \"rtwtypes.h\"\r\n#endif                        /* RTW_HEADER_simulink_mpu6050_model_private_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model_private.h\r\n */\r\n"},{"name":"simulink_mpu6050_model_types.h","type":"header","group":"model","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: simulink_mpu6050_model_types.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_simulink_mpu6050_model_types_h_\r\n#define RTW_HEADER_simulink_mpu6050_model_types_h_\r\n\r\n/* Model Code Variants */\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_simulink_mpu6050_model RT_MODEL_simulink_mpu6050_model;\r\n\r\n#endif                          /* RTW_HEADER_simulink_mpu6050_model_types_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model_types.h\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Utility files","code":"/*\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: Intel->x86-64 (Windows64)\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] rtwtypes.h\r\n */\r\n"},{"name":"STM32_Config.h","type":"header","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: STM32_Config.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_STM32_Config_h_\r\n#define RTW_HEADER_STM32_Config_h_\r\n#include \"stm32f1xx.h\"\r\n#include \"stm32f1xx_hal.h\"\r\n\r\n/* For Error_Handler() declaration. */\r\n#include \"main.h\"\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* RTW_HEADER_STM32_Config_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] STM32_Config.h\r\n */\r\n"},{"name":"main.c","type":"source","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: main.c\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n/* This section of code is going to be merged by the STM32CubeMX tool. */\r\n/* USER CODE BEGIN 0 */\r\n#include <stdio.h>\r\n#include \"simulink_mpu6050_model.h\"\r\n#include \"rtwtypes.h\"\r\n\r\n/* Flags for taskOverrun */\r\nstatic boolean_T OverrunFlags[1] = { false, };\r\n\r\n/* Number of auto reload timer rotation computed */\r\nstatic volatile uint32_t autoReloadTimerLoopVal_S = 1;\r\n\r\n/* Remaining number of auto reload timer rotation to do */\r\nvolatile uint32_t remainAutoReloadTimerLoopVal_S = 1;\r\n\r\n/* USER CODE END 0 */\r\n\r\n/**\r\n * @brief  The application entry point.\r\n * @retval int\r\n */\r\nint main (void)\r\n{\r\n  /* This section of code is going to be merged by the STM32CubeMX tool. */\r\n  /* USER CODE BEGIN 1 */\r\n  /* USER CODE END 1 */\r\n\r\n  /* This section of code is going to be merged by the STM32CubeMX tool. */\r\n  /* USER CODE BEGIN 2 */\r\n  /* Use Systick arm timer and interrupt to tick step() functions of the Simulink model. */\r\n  /* Fundamental sample time is set to: '0.001000000' s */\r\n  if (SysTick_Config((uint32_t)(SystemCoreClock/1000.0))) {\r\n    autoReloadTimerLoopVal_S = 1;\r\n    do {\r\n      autoReloadTimerLoopVal_S++;\r\n    } while ((uint32_t)(SystemCoreClock/1000.0)/autoReloadTimerLoopVal_S >\r\n             SysTick_LOAD_RELOAD_Msk);\r\n\r\n    SysTick_Config((uint32_t)(SystemCoreClock/1000.0)/autoReloadTimerLoopVal_S);\r\n  }\r\n\r\n  /* Set number of loop to do. */\r\n  remainAutoReloadTimerLoopVal_S = autoReloadTimerLoopVal_S;\r\n\r\n  {\r\n    int i;\r\n    for (i = 0; i < 1; i++) {\r\n      OverrunFlags[i] = false;\r\n    }\r\n  }\r\n\r\n  /* Initialize model */\r\n  simulink_mpu6050_model_initialize();\r\n\r\n  /* USER CODE END 2 */\r\n\r\n  /* This section of code is going to be merged by the STM32CubeMX tool. */\r\n  /* USER CODE BEGIN WHILE */\r\n  /* Infinite loop */\r\n  /* Real time from systickHandler */\r\n  while (1) {\r\n    /*Process tasks every solver time*/\r\n    if (remainAutoReloadTimerLoopVal_S == 0) {\r\n      remainAutoReloadTimerLoopVal_S = autoReloadTimerLoopVal_S;\r\n\r\n      /* Check base rate for overrun */\r\n      if (OverrunFlags[0]) {\r\n        rtmSetErrorStatus(simulink_mpu6050_model_M, \"Overrun\");\r\n      }\r\n\r\n      OverrunFlags[0] = true;\r\n\r\n      /* Step the model for base rate */\r\n      simulink_mpu6050_model_step();\r\n\r\n      /* Get model outputs here */\r\n\r\n      /* Indicate task for base rate complete */\r\n      OverrunFlags[0] = false;\r\n    }\r\n  }\r\n\r\n  /* USER CODE END WHILE */\r\n\r\n  /* USER CODE BEGIN 3 */\r\n  /* USER CODE END 3 */\r\n}\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] main.c\r\n */\r\n"},{"name":"simulink_mpu6050_model_External_Functions.h","type":"header","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: simulink_mpu6050_model_External_Functions.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_simulink_mpu6050_model_External_Functions_h_\r\n#define RTW_HEADER_simulink_mpu6050_model_External_Functions_h_\r\n\r\n/* Generated by STM32_Config.*/\r\n/***** External Imported Functions *****/\r\n#endif             /* RTW_HEADER_simulink_mpu6050_model_External_Functions_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model_External_Functions.h\r\n */\r\n"},{"name":"simulink_mpu6050_model_TIM.c","type":"source","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: simulink_mpu6050_model_TIM.c\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#include \"simulink_mpu6050_model.h\"\r\n#include \"simulink_mpu6050_model_TIM.h\"\r\n\r\n/* Number of configured TIMER. */\r\nuint16_t G_TIM_Count = 0;\r\n\r\n/* Array of TIMER information. */\r\nTIM_ConfTypeDef* G_TIM_Conf[1];\r\nTIM_HandleTypeDef* G_TIM_Handler[1];\r\n\r\n/* TIM3 informations. */\r\nTIM_ConfTypeDef TIM3_Conf;\r\n\r\n/*******************************************************************************\r\n * Function Name  : TIM_PeriodElapsedCustomCallback\r\n * Description    : Timer callback for update event\r\n * Input          : TIM_HandleTypeDef*   TIM IC handle\r\n *******************************************************************************/\r\nvoid TIM_PeriodElapsedCustomCallback(TIM_HandleTypeDef *htim)\r\n{\r\n  TIM_ConfTypeDef * pConf = G_TIM_Conf[0];\r\n  TIM_HandleTypeDef* pHandler = G_TIM_Handler[0];\r\n  if (pHandler == htim) {\r\n    if (pConf->ItUpFcn != NULL) {\r\n      /* Call update function for TIM3. */\r\n      pConf->ItUpFcn();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @brief  Period elapsed callback in non blocking mode\r\n * @param  htim TIM handle\r\n * @retval None\r\n */\r\nvoid HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)\r\n{\r\n  extern void TIM_PeriodElapsedCustomCallback(TIM_HandleTypeDef *htim);\r\n\r\n  /* Handle this event from model side. */\r\n  TIM_PeriodElapsedCustomCallback(htim);\r\n}\r\n\r\n/*******************************************************************************\r\n * Function Name  : TIM3_ItUpFcn\r\n * Description    : TIM3 update interrupt\r\n * Input          : None\r\n * TIM3_ItUpFcn is called from TIM_PeriodElapsedCustomCallback function\r\n * in simulink_mpu6050_model_TIM.c file.\r\n *******************************************************************************/\r\nvoid TIM3_ItUpFcn()\r\n{\r\n  {\r\n    /* Output and update for function-call system: '<Root>/Function-Call Subsystem' */\r\n    if (simulink_mpu6050_model_DW.LED_flash + 1.0 > 200.0) {\r\n      simulink_mpu6050_model_DW.LED_flash = 0.0;\r\n\r\n      {\r\n        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model_TIM.c\r\n */\r\n"},{"name":"simulink_mpu6050_model_TIM.h","type":"header","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: simulink_mpu6050_model_TIM.h\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n#ifndef RTW_HEADER_simulink_mpu6050_model_TIM_h_\r\n#define RTW_HEADER_simulink_mpu6050_model_TIM_h_\r\n#include \"STM32_Config.h\"\r\n\r\n/**\r\n * @brief TIM informations\r\n */\r\ntypedef struct {\r\n  uint32_t TIM_Prescaler;\r\n  uint32_t TIM_APBClock;\r\n  uint32_t TIM_ARR;\r\n  uint32_t TIM_Clock;\r\n  uint32_t TIM_Freq;\r\n  uint8_t CH1_type;\r\n  uint8_t CH2_type;\r\n  uint8_t CH3_type;\r\n  uint8_t CH4_type;\r\n  int32_t CH1_duty;\r\n  int32_t CH2_duty;\r\n  int32_t CH3_duty;\r\n  int32_t CH4_duty;\r\n\r\n  /* Input Capture data. */\r\n  uint32_t* ICCData;\r\n  uint32_t ICC1Capture;\r\n  uint32_t ICC1Freq;\r\n  uint32_t ICC1Duty;\r\n  uint32_t ICC2Capture;\r\n  uint32_t ICC2Freq;\r\n  uint32_t ICC2Duty;\r\n  uint32_t ICC3Capture;\r\n  uint32_t ICC3Freq;\r\n  uint32_t ICC3Duty;\r\n  uint32_t ICC4Capture;\r\n  uint32_t ICC4Freq;\r\n  uint32_t ICC4Duty;\r\n  uint16_t ICC1ReadValue1;\r\n  uint16_t ICC1ReadValue2;\r\n  uint16_t ICC1ReadValue3;\r\n  uint16_t ICC1ReadValue4;\r\n  uint16_t ICC2ReadValue1;\r\n  uint16_t ICC2ReadValue2;\r\n  uint16_t ICC2ReadValue3;\r\n  uint16_t ICC2ReadValue4;\r\n  uint16_t ICC3ReadValue1;\r\n  uint16_t ICC3ReadValue2;\r\n  uint16_t ICC3ReadValue3;\r\n  uint16_t ICC3ReadValue4;\r\n  uint16_t ICC4ReadValue1;\r\n  uint16_t ICC4ReadValue2;\r\n  uint16_t ICC4ReadValue3;\r\n  uint16_t ICC4ReadValue4;\r\n  uint8_t ICC1CaptureNumber;\r\n  uint8_t ICC2CaptureNumber;\r\n  uint8_t ICC3CaptureNumber;\r\n  uint8_t ICC4CaptureNumber;\r\n  void (* ItUpFcn)(void);\r\n  void (* ItTrgFcn)(void);\r\n  void (* ItComFcn)(void);\r\n  void (* ItBrkFcn)(void);\r\n  void (* ItCcFcn)(TIM_HandleTypeDef *htim);\r\n} TIM_ConfTypeDef;\r\n\r\ntypedef enum {\r\n  OUTPUT_COMP = 0,\r\n  OUTPUT_PWM,\r\n  OUTPUT_TRGO,\r\n  OUTPUT_FORCED,\r\n  INPUT_PWM,\r\n  INPUT_CAPTURE,\r\n  INPUT_ETR,\r\n  INPUT_ENCODER,\r\n  INPUT_HALL_SENSOR,\r\n  UNKNOWN\r\n} TIM_ChTypeDef;\r\n\r\n/* Number of configured TIMER. */\r\nextern uint16_t G_TIM_Count;\r\n\r\n/* Array of TIMER information. */\r\nextern TIM_ConfTypeDef* G_TIM_Conf[1];\r\nextern TIM_HandleTypeDef* G_TIM_Handler[1];\r\n\r\n/* TIM3 handler. */\r\nextern TIM_HandleTypeDef htim3;\r\n\r\n/* TIM3 informations. */\r\nextern TIM_ConfTypeDef TIM3_Conf;\r\nextern void TIM3_ItUpFcn(void);\r\n\r\n#endif                            /* RTW_HEADER_simulink_mpu6050_model_TIM_h_ */\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] simulink_mpu6050_model_TIM.h\r\n */\r\n"},{"name":"stm32xxxx_it.c","type":"source","group":"","path":"C:\\Users\\Li Chong\\project\\matlab_application\\simulink_mpu6050\\simulink_mpu6050_model_stm32","tag":"","groupDisplay":"Other files","code":"/*\r\n * File: stm32xxxx_it.c\r\n *\r\n * Code generated for Simulink model :simulink_mpu6050_model.\r\n *\r\n * Model version      : 1.0\r\n * Simulink Coder version    : 9.6 (R2021b) 14-May-2021\r\n * TLC version       : 9.6 (Aug 25 2021)\r\n * C/C++ source code generated on  : Sun Nov 19 18:27:09 2023\r\n *\r\n * Target selection: stm32.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n *\r\n *\r\n *\r\n * ******************************************************************************\r\n * * attention\r\n * *\r\n * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\r\n * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\r\n * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY\r\n * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\r\n * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\r\n * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\r\n * *\r\n * ******************************************************************************\r\n */\r\n\r\n/**\r\n * @brief This function handles System tick timer.\r\n */\r\nvoid SysTick_Handler(void)\r\n{\r\n  /* This section of code is going to be merged by the STM32CubeMX tool. */\r\n  /* USER CODE BEGIN SysTick_IRQn 0 */\r\n  {\r\n    extern volatile uint32_t remainAutoReloadTimerLoopVal_S;\r\n\r\n    /* Manage number of loop before interrupt has to be processed. */\r\n    if (remainAutoReloadTimerLoopVal_S) {\r\n      remainAutoReloadTimerLoopVal_S--;\r\n    }\r\n  }\r\n\r\n  /* USER CODE END SysTick_IRQn 0 */\r\n\r\n  /* USER CODE BEGIN SysTick_IRQn 1 */\r\n\r\n  /* USER CODE END SysTick_IRQn 1 */\r\n}\r\n\r\n/* File trailer for Real-Time Workshop generated code.\r\n *\r\n * [EOF] stm32xxxx_it.c\r\n */\r\n"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}]};